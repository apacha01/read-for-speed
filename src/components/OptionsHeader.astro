---
import Modal from "./Modal.astro";
import ThemeToggler from "./ThemeToggler.astro";

interface Props {
	class?: string;
}
---

<section class={Astro.props.class}>
	<div class="flex gap-8">
		<!-- How to use -->
		<button
			id="how-to"
			title="How to use"
			class="font-mono text-3xl border themed-borders themed-icons rounded-full w-10 h-10 pt-[0.125rem] hover:scale-110 transition-transform"
		>
			?
		</button>

		<!-- Why use -->
		<button
			id="why-to"
			title="Why use"
			class="font-mono text-3xl border themed-borders themed-icons rounded-full w-10 h-10 pt-[0.125rem] hover:scale-110 transition-transform"
		>
			!
		</button>

		<!-- Theme Toggler -->
		<ThemeToggler
			class="w-10 h-10 inline-flex hover:scale-110 transition-transform themed-icons"
		/>
	</div>

	<div>
		<button
			id="text-upload"
			class="text-xl tracking-wider font-bold px-6 py-3 rounded-3xl border-2 themed-borders themed-icons"
		>
			Load Text
		</button>
	</div>
</section>
<Modal
	title="This is a sample title"
	description="Sample description"
	subtitle="Subtitle"
/>

<script>
	import { openModal } from "../stores/modal";

	let howBtn = document.getElementById("how-to");
	let whyBtn = document.getElementById("why-to");

	const howInfo = {
		title: "How to use",
		subtitle: "",
		description:
			"You can use tab to move around the page, it will go from upper left (header) to upper right (load button) to middle/lower right (configurations)",
		content: `<ul class="text-xl text-pretty max-w-prose flex flex-col gap-6 list-decimal">
					<li>Press the "Load Text" button on the upper right</li>
					<li>
						Paste the text you want to read on the text area that will appear
						when clicking the button, and press "Ready" when you finished
					</li>
					<li>
						The first word will appear in the center where there used to be a
						big "Word". Now you can start by pressing the "Play / Pause" button
						or by using the spacebar (do fix your vision on the word because it
						moves fast)
					</li>
					<li>
						Upon pausing the single word in the center will expand and show the
						last 50 words, in case you distracted for a bit
					</li>
					<li>
						Aditionally you can change of font between a sans-serif (Lato) and a
						serif (Garamond) type, the words per minute (WPM) and the speech
						character that the text uses for conversations
					</li>
				</ul>`,
	};

	const whyInfo = {
		title: "Why use",
		subtitle: "Reading Faster",
		description:
			"There are several ways to improve reading speed, the most common ones being:",
		content: `<ul class="text-xl text-pretty max-w-prose flex flex-col gap-6">
					<li class="text-pretty">
						<strong>Don't sub-vocalize:</strong> this means that you should not <i>say</i> the words in your head as you'are reading. Your brain process things much faster than the speed you can <i>read</i> or <i>speak</i>.
					</li>
					<li class="text-pretty">
						<strong>Focusing your vision:</strong> basically don't move your eye and learn to read the words by seeing them once and in one point. Your brain can process information much faster than the speed your eyes move.
					</li>
					<li class="text-pretty">
						<strong>Stop regression:</strong> this means you shouldn't unnecessarily go back over what you just read. You do have the option to pause and read the previous words (just by pausing) if you got distracted, but there is no need to go back if you were paying attention even if you think that you didn't get it, your brain will process it.
					</li>
					<li>
						
					</li>
				</ul>
				<p class="text-xl text-center">Basically your brain is amazing, so make the most out of it with this app.</p>
				`,
	};

	const modalTitle = document.getElementById("__modal_title__");
	const modalSubtitle = document.getElementById("__modal_subtitle__");
	const modalDescription = document.getElementById("__modal_description__");
	const modalContent = document.getElementById("__modal_content__");

	howBtn?.addEventListener("click", () => {
		if (modalTitle) modalTitle.innerText = howInfo.title;
		if (modalSubtitle) modalSubtitle.innerText = howInfo.subtitle;
		if (modalDescription) modalDescription.innerText = howInfo.description;
		if (modalContent) modalContent.innerHTML = howInfo.content;
		openModal();
	});
	whyBtn?.addEventListener("click", () => {
		if (modalTitle) modalTitle.innerText = whyInfo.title;
		if (modalSubtitle) modalSubtitle.innerText = whyInfo.subtitle;
		if (modalDescription) modalDescription.innerText = whyInfo.description;
		if (modalContent) modalContent.innerHTML = whyInfo.content;
		openModal();
	});
</script>
